/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ManageAirliner;

import Business.Airliner;
import Business.AirlinerDirectory;
import Business.Airplane;
import Business.AirplaneDirectory;
import Business.FlightSchedule;
import Business.MasterTravelSchedule;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mayank
 */
public class ManageFlightSchedules extends javax.swing.JPanel {
    
    private AirlinerDirectory airlineDirectory;
    private AirplaneDirectory airplaneDirectory;
    private JPanel panel;
    private Airliner airliner;
    private MasterTravelSchedule masterTravelSchedule;
    
    /**
     * Creates new form FlightSchedule
     */
    public ManageFlightSchedules(JPanel panel, AirlinerDirectory airlineDirectory, AirplaneDirectory airplaneDirectory, Airliner airliner,MasterTravelSchedule masterTravelSchedule) {
        initComponents();
        this.panel = panel;
        this.airlineDirectory = airlineDirectory;
        this.airplaneDirectory = airplaneDirectory;
        this.airliner = airliner;
        this.masterTravelSchedule = masterTravelSchedule;
        populateFlightSchedules();
    }
    
    public void populateFlightSchedules() {
        DefaultTableModel dtm = (DefaultTableModel)flightScheduleTbl.getModel();
        dtm.setRowCount(0);
        for(FlightSchedule fs : airliner.getFlightScheduleList()){
            Object[] row = new Object[dtm.getColumnCount()];
            row[0] = fs;
            row[1] = fs.getSource();
            row[2] = fs.getDestination();
            row[3] = fs.getDepartureDate() + "; " + fs.getDepartureTime();
            row[4] = fs.getDepartureDate() + "; " + fs.getArrivalTime();
            row[5] = fs.isIsActive() ? "Active" : "Inactive";
            dtm.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        flightScheduleTbl = new javax.swing.JTable();
        addScheduleBtn = new javax.swing.JButton();
        updateScheduleBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        backFlightSchedule = new javax.swing.JButton();

        setBackground(new java.awt.Color(174, 195, 195));
        addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                formAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        flightScheduleTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Flight Schedule Id", "Source", "Destination", "Departure Date & Time", "Arrival Date & Time", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        flightScheduleTbl.setRowHeight(25);
        jScrollPane1.setViewportView(flightScheduleTbl);
        if (flightScheduleTbl.getColumnModel().getColumnCount() > 0) {
            flightScheduleTbl.getColumnModel().getColumn(0).setResizable(false);
            flightScheduleTbl.getColumnModel().getColumn(1).setResizable(false);
            flightScheduleTbl.getColumnModel().getColumn(2).setResizable(false);
            flightScheduleTbl.getColumnModel().getColumn(3).setResizable(false);
            flightScheduleTbl.getColumnModel().getColumn(4).setResizable(false);
            flightScheduleTbl.getColumnModel().getColumn(5).setResizable(false);
        }

        addScheduleBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/add.png"))); // NOI18N
        addScheduleBtn.setText(" Add Schedule");
        addScheduleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addScheduleBtnActionPerformed(evt);
            }
        });

        updateScheduleBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/update.png"))); // NOI18N
        updateScheduleBtn.setText(" Update Schedule");
        updateScheduleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateScheduleBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe Print", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Flight Schedules");

        backFlightSchedule.setBackground(new java.awt.Color(174, 195, 195));
        backFlightSchedule.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-back-30.png"))); // NOI18N
        backFlightSchedule.setText("Back");
        backFlightSchedule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backFlightScheduleActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(backFlightSchedule))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(374, 374, 374)
                                .addComponent(jLabel1)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(272, 272, 272)
                .addComponent(addScheduleBtn)
                .addGap(67, 67, 67)
                .addComponent(updateScheduleBtn)
                .addContainerGap(317, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(backFlightSchedule)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateScheduleBtn)
                    .addComponent(addScheduleBtn))
                .addContainerGap(480, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addScheduleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addScheduleBtnActionPerformed
        CreateFlightSchedule createflightSchedulePanel = new CreateFlightSchedule(this.panel, this.airlineDirectory, this.airplaneDirectory, this.airliner,this.masterTravelSchedule);
        this.panel.add(createflightSchedulePanel, "CreateFlightSchedule");
        CardLayout layout = (CardLayout)this.panel.getLayout();
        layout.next(panel);
    }//GEN-LAST:event_addScheduleBtnActionPerformed

    private void updateScheduleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateScheduleBtnActionPerformed
        int selectedRow = flightScheduleTbl.getSelectedRow();
        if(selectedRow>=0){
            FlightSchedule flightSchedule = (FlightSchedule)flightScheduleTbl.getValueAt(selectedRow, 0);
            
            UpdateFlightSchedule updateflightSchedulePanel = new UpdateFlightSchedule( this.panel,  this.airlineDirectory,  this.airplaneDirectory, this.airliner, flightSchedule, this.masterTravelSchedule);
            this.panel.add(updateflightSchedulePanel, "UpdateFlightSchedule");
            CardLayout layout = (CardLayout)this.panel.getLayout();
            layout.next(panel);
        }else{
            JOptionPane.showMessageDialog(null, "Please select a Flight Schedule");
        }
    }//GEN-LAST:event_updateScheduleBtnActionPerformed

    private void backFlightScheduleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backFlightScheduleActionPerformed
        // TODO add your handling code here:
//        AirlinerFunction airLinerFunction = new AirlinerFunction(this.panel,  airlineDirectory,  airplaneDirectory,  airliner,  masterTravelSchedule);
//        this.panel.add(airLinerFunction, "AirlinerFunction");
//        CardLayout layout = (CardLayout)this.panel.getLayout();
//        layout.next(panel);
//        this.panel.remove(this);
//        CardLayout layout = (CardLayout) this.panel.getLayout();
//        layout.previous(panel);

               this.panel.remove(this);
        CardLayout layout = (CardLayout)this.panel.getLayout();
        Component[] comps = this.panel.getComponents();
        for (Component comp : comps){
            if(comp instanceof AirlinerFunction){
                AirlinerFunction rePopulateTable = (AirlinerFunction) comp;
                rePopulateTable.populateAirlineFlights();
            }
        }
        layout.previous(panel);
    }//GEN-LAST:event_backFlightScheduleActionPerformed

    private void formAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_formAncestorAdded
        // TODO add your handling code here:
     
    }//GEN-LAST:event_formAncestorAdded


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addScheduleBtn;
    private javax.swing.JButton backFlightSchedule;
    private javax.swing.JTable flightScheduleTbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton updateScheduleBtn;
    // End of variables declaration//GEN-END:variables
}
