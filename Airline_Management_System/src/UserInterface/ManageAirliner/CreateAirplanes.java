/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package UserInterface.ManageAirliner;

import Business.Airliner;
import Business.AirlinerDirectory;
import Business.Airplane;
import Business.AirplaneDirectory;
import Business.MasterTravelSchedule;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Mayank
 */
public class CreateAirplanes extends javax.swing.JPanel {
    
    private AirlinerDirectory airlineDirectory;
    private AirplaneDirectory airplaneDirectory;
    private JPanel panel;
    DefaultTableModel dtm;
    private Airliner airliner;
    private Business.FlightSchedule f;
    private MasterTravelSchedule masterTravelSchedule;
    
    
    /** Creates new form CreateAirplanes */
    public CreateAirplanes(JPanel panel, AirlinerDirectory airlineDirectory, AirplaneDirectory airplaneDirectory, Airliner airliner,MasterTravelSchedule masterTravelSchedule) {
        initComponents();
        this.panel = panel;
        this.airlineDirectory = airlineDirectory;
        this.airplaneDirectory = airplaneDirectory;
        this.airliner = airliner;
        this.masterTravelSchedule = masterTravelSchedule;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        airplaneName = new javax.swing.JTextField();
        airplaneRows = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        airplaneCol = new javax.swing.JTextField();
        createAirplane = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        backCreateAirplane = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        aStatus = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(174, 195, 195));
        setPreferredSize(new java.awt.Dimension(1040, 1020));

        jLabel1.setText("Airplane Name *");

        jLabel2.setText("# of Rows *");

        jLabel3.setText("# of Columns *");

        createAirplane.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/travel.png"))); // NOI18N
        createAirplane.setText("Create");
        createAirplane.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createAirplaneActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe Print", 1, 36)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Create Airplane");

        backCreateAirplane.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-back-30.png"))); // NOI18N
        backCreateAirplane.setText("Back");
        backCreateAirplane.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backCreateAirplaneActionPerformed(evt);
            }
        });

        jLabel5.setText("Status *");

        aStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- None --", "Active", "Inactive" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backCreateAirplane)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(aStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                                .addComponent(airplaneCol, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(airplaneRows, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(30, 30, 30)
                                .addComponent(airplaneName)))
                        .addGap(372, 372, 372))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(372, 372, 372)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(442, 442, 442)
                        .addComponent(createAirplane)))
                .addContainerGap(382, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backCreateAirplane)
                .addGap(35, 35, 35)
                .addComponent(jLabel4)
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(airplaneName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(airplaneRows, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(airplaneCol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(aStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(60, 60, 60)
                .addComponent(createAirplane)
                .addContainerGap(511, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void createAirplaneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createAirplaneActionPerformed
        boolean isAirplaneExist = false;
        
        if("".equals(airplaneName.getText())) {
            JOptionPane.showMessageDialog(null, "Airplane Name is mandatory");
            
        }else if("".equals(airplaneCol.getText())) {
            JOptionPane.showMessageDialog(null, "Airplane Seat Columns is mandatory");
            
        }else if("".equals(airplaneRows.getText())) {
            JOptionPane.showMessageDialog(null, "Airplane Seat Rows is mandatory");
            
        }else if("-- None --".equals(aStatus.getSelectedItem())) {
            JOptionPane.showMessageDialog(null, "Airplane status is mandatory");
            
        }else {
            
            for(Airplane airplane : airliner.getAirplaneList()) {
                if(airplaneName.getText().equalsIgnoreCase(airplane.getAirplaneName())) {
                    isAirplaneExist = true;
                    JOptionPane.showMessageDialog(null, "Airplane with name \"" + airplane.getAirplaneName() + "\" already exist. Please enter a different name.");
                    break;
                }
            }
            
            if(isAirplaneExist == false) {
                
                int seatCols = 0;
                try {
                    seatCols = Integer.parseInt(airplaneCol.getText());
                }catch(NumberFormatException e){
                    JOptionPane.showMessageDialog(null, "Please enter a valid seat column number");
                    return;
                }

                int seatRows = 0;
                try{
                    seatRows = Integer.parseInt(airplaneRows.getText());
                }catch(NumberFormatException e){
                    JOptionPane.showMessageDialog(null, "Please enter a valid seat row number");
                    return;
                }

                Airplane newAirplane = new Airplane();
                
                newAirplane.setAirplaneName(airplaneName.getText());
                newAirplane.setSeatCol(seatCols);
                newAirplane.setSeatRow(seatRows);
                newAirplane.setIsActive(aStatus.getSelectedItem().toString() == "Active");
                airliner.addAirplane(newAirplane);
                clearFields();
                JOptionPane.showMessageDialog(null, "Airplane Created Successfully"); 
            }
        }    
    }//GEN-LAST:event_createAirplaneActionPerformed

    private void backCreateAirplaneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backCreateAirplaneActionPerformed
        // TODO add your handling code here:
//        ManageAirplanes createAirplanePanel = new ManageAirplanes(this.panel,  airlineDirectory,  airplaneDirectory,  airliner,  masterTravelSchedule);
//        this.panel.add(createAirplanePanel, "CreateAirplane");
//        CardLayout layout = (CardLayout)this.panel.getLayout();
//        layout.next(panel);
//        this.panel.remove(this);
//        CardLayout layout = (CardLayout) this.panel.getLayout();
//        layout.previous(panel);

            this.panel.remove(this);
        CardLayout layout = (CardLayout)this.panel.getLayout();
        Component[] comps = this.panel.getComponents();
        for (Component comp : comps){
            if(comp instanceof ManageAirplanes){
                ManageAirplanes rePopulateTable = (ManageAirplanes) comp;
                rePopulateTable.populateAiplaneTable();
            }
        }
        layout.previous(panel);
    }//GEN-LAST:event_backCreateAirplaneActionPerformed

    private void clearFields() {
        airplaneName.setText("");
        airplaneCol.setText("");
        airplaneRows.setText("");
        aStatus.setSelectedItem("-- None --");
        aStatus.setSelectedItem("-- None --");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> aStatus;
    private javax.swing.JTextField airplaneCol;
    private javax.swing.JTextField airplaneName;
    private javax.swing.JTextField airplaneRows;
    private javax.swing.JButton backCreateAirplane;
    private javax.swing.JButton createAirplane;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    // End of variables declaration//GEN-END:variables

}
