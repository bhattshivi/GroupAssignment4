/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.ManageTravelAgency;

import Business.AirlinerDirectory;
import Business.Airliner;
import Business.Airplane;
import Business.AirplaneDirectory;
import Business.MasterTravelSchedule;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author Mayank
 */
public class UpdateAirliner extends javax.swing.JPanel {
    
    private JPanel panel;
    private Airliner airliner;
    private AirlinerDirectory airlineDirectory;
    private AirplaneDirectory airplaneDirectory;
    private MasterTravelSchedule masterTravelSchedule;
    
    /**
     * Creates new form Update Airliner
     */
    public UpdateAirliner(JPanel panel, AirlinerDirectory airlineDirectory, AirplaneDirectory airplaneDirectory, MasterTravelSchedule masterTravelSchedule ,Airliner airliner) {
        initComponents();
        this.panel = panel;
        this.airlineDirectory = airlineDirectory;
        this.airplaneDirectory = airplaneDirectory;
        this.masterTravelSchedule = masterTravelSchedule;
        this.airliner = airliner;
        populateAirlinerDetails();
    }
    
    public void populateAirlinerDetails() {
        airlinerName.setText(airliner.getAirlinerName());
        airlinerHeadquarters.setText(airliner.getHeadquarter());
        airlinerFleetSize.setText(airliner.getFleetSize()+"");
        statusCombo.setSelectedItem(airliner.isIsActive() ? "Active" : "Inactive");
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        airlinerName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        airlinerFleetSize = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        airlinerHeadquarters = new javax.swing.JTextField();
        updateAirlinerBtn = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        backUpdateAirliner = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        statusCombo = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(174, 195, 195));
        setPreferredSize(new java.awt.Dimension(1040, 1020));

        jLabel1.setText("Airliner Name *");

        jLabel2.setText("Fleet Size *");

        jLabel3.setText("Headquarter *");

        updateAirlinerBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/change.png"))); // NOI18N
        updateAirlinerBtn.setText("Update");
        updateAirlinerBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateAirlinerBtnActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe Print", 1, 36)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Update Airliner");

        backUpdateAirliner.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8-back-30.png"))); // NOI18N
        backUpdateAirliner.setText("Back");
        backUpdateAirliner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backUpdateAirlinerActionPerformed(evt);
            }
        });

        jLabel5.setText("Status *");

        statusCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-- None --", "Active", "Inactive" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(backUpdateAirliner))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(329, 329, 329)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(airlinerFleetSize, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel5))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(27, 27, 27)
                                            .addComponent(airlinerName, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(airlinerHeadquarters)
                                                .addComponent(statusCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(418, 418, 418)
                        .addComponent(updateAirlinerBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(373, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backUpdateAirliner)
                .addGap(47, 47, 47)
                .addComponent(jLabel4)
                .addGap(47, 47, 47)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(airlinerName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(airlinerFleetSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(airlinerHeadquarters, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(6, 6, 6))
                    .addComponent(statusCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addComponent(updateAirlinerBtn)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void updateAirlinerBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateAirlinerBtnActionPerformed
        
        boolean isAirlinerExist = false;
        
        if("".equals(airlinerName.getText())) {
            JOptionPane.showMessageDialog(null, "Airline Name is mandatory");
            
        }else if("".equals(airlinerHeadquarters.getText())) {
            JOptionPane.showMessageDialog(null, "Airline headquarters is mandatory");
            
        }else if("".equals(airlinerFleetSize.getText())) {
            JOptionPane.showMessageDialog(null, "Airline fleet size is mandatory");
            
        }else if("-- None --".equals(statusCombo.getSelectedItem())) {
            JOptionPane.showMessageDialog(null, "Flight Schedule status is mandatory");
            
        }else {
            
            for(Airliner a : airlineDirectory.getAirlinerList()) {                
                if(!(airliner.getAirlinerName().equalsIgnoreCase(a.getAirlinerName()))) {
                    if(airlinerName.getText().equalsIgnoreCase(a.getAirlinerName())) {
                        isAirlinerExist = true;
                        JOptionPane.showMessageDialog(null, "Airliner with name \"" + a.getAirlinerName() + "\" already exist. Please enter a different name.");
                        break;
                    }
                }
            }
            
            if(isAirlinerExist == false) {
                
                int aFleet = 0;
                try {
                    aFleet = Integer.parseInt(airlinerFleetSize.getText());
                }catch(NumberFormatException e){
                    JOptionPane.showMessageDialog(null, "Please enter a valid fleet size");
                    return;
                }

                airliner.setAirlinerName(airlinerName.getText());
                airliner.setHeadquarter(airlinerHeadquarters.getText());
                airliner.setFleetSize(Integer.parseInt(airlinerFleetSize.getText()));
                airliner.setIsActive(statusCombo.getSelectedItem().toString() == "Active");
                JOptionPane.showMessageDialog(null, "Airline Updated Successfully"); 
            }
        }
    }//GEN-LAST:event_updateAirlinerBtnActionPerformed

    private void backUpdateAirlinerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backUpdateAirlinerActionPerformed
        // TODO add your handling code here:
//        AddAirline addAirline = new AddAirline(this.panel,  airlineDirectory,  airplaneDirectory,  masterTravelSchedule);
//        this.panel.add(addAirline, "AddAirline");
//        CardLayout layout = (CardLayout)this.panel.getLayout();
//        layout.next(panel);
//        this.panel.remove(this);
//        CardLayout layout = (CardLayout) this.panel.getLayout();
//        layout.previous(panel);
            this.panel.remove(this);
        CardLayout layout = (CardLayout)this.panel.getLayout();
        Component[] comps = this.panel.getComponents();
        for (Component comp : comps){
            if(comp instanceof AddAirline){
                AddAirline rePopulateTable = (AddAirline) comp;
                rePopulateTable.populateAirliners();
            }
        }
        layout.previous(panel);
    }//GEN-LAST:event_backUpdateAirlinerActionPerformed
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField airlinerFleetSize;
    private javax.swing.JTextField airlinerHeadquarters;
    private javax.swing.JTextField airlinerName;
    private javax.swing.JButton backUpdateAirliner;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JComboBox<String> statusCombo;
    private javax.swing.JButton updateAirlinerBtn;
    // End of variables declaration//GEN-END:variables
}
